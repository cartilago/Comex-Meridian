function OnlineMapsGetURL(url, id, gameobject, successMethod, errorMethod)
{
	var XHR = ("onload" in new XMLHttpRequest()) ? XMLHttpRequest : XDomainRequest;
	var client = new XHR();
	if (url.indexOf(".virtualearth.net") > -1)
	{
		url = "http://service.infinity-code.com/redirect.php?" + url;
	}
	client.open('GET', url, true);
	client.responseType = "arraybuffer";

	client.onload = function() {
		var bufView = new Uint8Array(client.response);
		var b64 = base64_encode(bufView);
		u.getUnity().SendMessage(gameobject, successMethod, id + "|||" + client.getAllResponseHeaders() + "|||" +  b64);
	}

	client.onerror = function() {
        u.getUnity().SendMessage(gameobject, errorMethod, id + "|||Error");
    }

	client.send();
}

function base64_encode( data ) {

	var b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
	var o1, o2, o3, h1, h2, h3, h4, bits, i=0, enc='';

	do {
		o1 = data[i++];
		o2 = data[i++];
		o3 = data[i++];

		bits = o1<<16 | o2<<8 | o3;

		h1 = bits>>18 & 0x3f;
		h2 = bits>>12 & 0x3f;
		h3 = bits>>6 & 0x3f;
		h4 = bits & 0x3f;

		enc += b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);
	} while (i < data.length);

	switch( data.length % 3 ){
		case 1:
			enc = enc.slice(0, -2) + '==';
			break;
		case 2:
			enc = enc.slice(0, -1) + '=';
			break;
	}

	return enc;
}
